run = "npm run dev"
modules = ["nodejs-20", "python-3.11", "postgresql-16"]
hidden = [".config", "package-lock.json"]
entrypoint = "index.html"

[nix]
channel = "stable-24_05"

[unitTest]
language = "nodejs"

[deployment]
deploymentTarget = "cloudrun"

# CRITICAL DEPLOYMENT CONFIGURATION
# 
# This configuration determines how the app is built and deployed.
# ANY CHANGES TO THIS SECTION CAN BREAK THE DEPLOYMENT!
#
# build: Runs BEFORE the application starts
# 1. "npm run build" - Builds the React frontend into dist/ directory
# 2. "cp -r dist server/dist" - CRITICAL: Copies frontend files to where backend expects them
#
# run: Starts the application after build completes
# 1. Changes to server directory where main.py is located
# 2. Installs Python dependencies 
# 3. Starts the FastAPI backend server
#
# The backend serves static files from ./dist (relative to server/)
# Without the copy step, frontend files won't be found and users will get API JSON instead of the UI
#
# IF DEPLOYMENT BREAKS:
# - Check that both build commands completed successfully
# - Verify dist/ directory exists after npm run build
# - Verify server/dist/ directory exists after cp command
# - Check server logs for "STATIC FILES" messages
build = ["sh", "-c", "npm run build && cp -r dist server/dist"]
run = ["sh", "-c", "cd server && python3 -m pip install --break-system-packages -r requirements.txt && python3 main.py"]

[[ports]]
localPort = 80
externalPort = 80

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 5001
externalPort = 3000

[[ports]]
localPort = 8000
externalPort = 8000

[workflows]
runButton = "Full Stack (Both Services)"

[[workflows.workflow]]
name = "Run"
author = 21724697
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Start Backend"
author = 21724697
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd server && python3 -m pip install -r requirements.txt && python3 main.py"

[[workflows.workflow]]
name = "Full Stack Dev"
author = 21724697
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 start_services.py"

[[workflows.workflow]]
name = "Start Backend Only"
author = 21724697
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd server && python3 -m pip install -r requirements.txt && python3 main.py"

[[workflows.workflow]]
name = "Start Frontend Only"
author = 21724697
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Full Stack"
author = 21724697
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 start_services.py"

[[workflows.workflow]]
name = "Start Frontend"
author = 21724697
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Full Stack (Both Services)"
author = 21724697
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd server && python3 -m pip install --break-system-packages -r requirements.txt && python3 main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
